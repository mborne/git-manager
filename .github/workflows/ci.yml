name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    strategy:
      matrix:
        php-version: [7.4,8.1,8.2]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: "Setup PHP ${{ matrix.php-version }}"
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        coverage: xdebug2
        #coverage: xdebug
        #tools: php-cs-fixer, phpunit

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Check style
      run: vendor/bin/php-cs-fixer fix src -v --dry-run --diff --using-cache=no

    - name: Run tests
      run: |
        vendor/bin/phpunit -c phpunit.xml.dist \
          --log-junit var/output/junit-report.xml \
          --coverage-clover var/output/clover.xml \
          --coverage-html var/output/coverage
      env:
        XDEBUG_MODE: coverage
        SYMFONY_DEPRECATIONS_HELPER: weak
        GIT_MANAGER_DIR: /tmp/git-manager-test

    - name: Build dist/git-manager.phar
      run: |
        php -d phar.readonly=0 build-phar.php
        chmod +x dist/git-manager.phar

    - name: Test dist/git-manager.phar with gitlab.com
      run: |
        bash .ci/check-gitlab.sh
      env:
        GIT_MANAGER_DIR: /tmp/git-manager-test
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}

    - name: Upload coverage results to coveralls.io
      if: github.ref == 'refs/heads/master' && matrix.php-version == '8.2'
      run: |
        vendor/bin/php-coveralls --coverage_clover=var/output/clover.xml --json_path=var/output/coveralls.json -v
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
